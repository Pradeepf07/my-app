{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apiservice.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/counter/counter.component.css","webpack:///./src/app/counter/counter.component.html","webpack:///./src/app/counter/counter.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/temp/temp.component.css","webpack:///./src/app/temp/temp.component.html","webpack:///./src/app/temp/temp.component.ts","webpack:///./src/app/userslist/userslist.component.css","webpack:///./src/app/userslist/userslist.component.html","webpack:///./src/app/userslist/userslist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Http,Response } from '@angular/http';\nimport 'rxjs/Rx'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor(private http:Http) {\n    \n  }\n\n  getServerData():any{\n\n    return this.http.get('https://jsonplaceholder.typicode.com/users')\n    .map(\n      (response:Response)=> response.json()\n      )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Hello {{name}} from {{college}} Welcome to {{ title }}!\\n  </h1>\\n  \\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'My Project Home page';\n  name = 'Amal'\n  college='TKM'\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule,Route, Routes} from '@angular/router';\nimport {Http, HttpModule} from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { TempComponent } from './temp/temp.component';\n\nimport { ApiserviceService } from './apiservice.service';\nimport { UserslistComponent } from './userslist/userslist.component';\n\n\n\nconst appRouter:Routes=[\n  {path:'',component:HomeComponent},\n  {path:'contact',component:ContactComponent},\n  {path:'counter',component:CounterComponent},\n  {path:'ict',component:TempComponent},\n  { path:'userslistdata' , component:UserslistComponent }\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    NavbarComponent,\n    ContactComponent,\n    HomeComponent,\n    CounterComponent,\n    TempComponent,\n    UserslistComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRouter)\n  ],\n  providers: [ApiserviceService],\n  bootstrap: [MainComponent,NavbarComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n<h5>Contact Form</h5> \\n\\n<form class=\\\"row\\\" (ngSubmit)=\\\"onSubmitData(f)\\\" #f=\\\"ngForm\\\">\\n  <div class=\\\"form-group col-md-4\\\">\\n    <label for=\\\"uname\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter full name\\\" ngModel name=\\\"uname\\\" required=\\\"required\\\">\\n    <div class=\\\"valid-feedback\\\">Valid.</div>\\n    <div class=\\\"invalid-feedback\\\">Please fill out this field.</div>\\n  </div>\\n  \\n  <div class=\\\"form-group col-md-4\\\">\\n    <label for=\\\"pwd\\\">Phone Number</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\"  placeholder=\\\"Enter phone number\\\" ngModel name=\\\"pswd\\\" required>\\n    <div class=\\\"valid-feedback\\\">Valid.</div>\\n    <div class=\\\"invalid-feedback\\\">Please fill out this field.</div>\\n  </div>\\n  \\n  <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"pwd\\\">Email Address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email address\\\" ngModel name=\\\"email\\\" required>\\n      <div class=\\\"valid-feedback\\\">Valid.</div>\\n      <div class=\\\"invalid-feedback\\\">Please fill out this field.</div>\\n    </div>\\n  \\n    <div class=\\\"form-group col-md-12\\\">\\n        <label for=\\\"pwd\\\">Message</label>\\n        <textarea name=\\\"mssg\\\" class=\\\"form-control\\\" ngModel rows=\\\"5\\\"></textarea>\\n        <div class=\\\"valid-feedback\\\">Valid.</div>\\n        <div class=\\\"invalid-feedback\\\">Please fill out this field.</div>\\n      </div>\\n \\n    <div class=\\\"form-group col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\">Contact us</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  getName = '';\n  getPhnum = '';\n  getEmail = '';\n  getMsg = '';\n  onSubmitData(form:NgForm){\n    console.log(form.value);\n\n    this.getName = form.value.uname\n    this.getPhnum = form.value.pswd\n    this.getEmail = form.value.email\n    this.getMsg = form.value.mssg\n\n    console.log(form.value.uname);\n    \n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"text-align: center;margin-bottom: 30px\\\">\\n  <h3>{{count_value}}</h3>\\n</div>\\n\\n <div class=\\\"col-md-6\\\">\\n   <button class=\\\"btn btn-dark\\\" (click)=\\\"plusclick()\\\" style=\\\"float: right\\\">Counter plus</button>\\n </div>\\n\\n <div class=\\\"col-md-6\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"minusclick()\\\">Counter minus</button>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n\n  count_value = 0;\n\n  color_v = \"red\";\n  \n\n  plusclick(){\n    this.count_value++;\n  }\n  minusclick(){\n    this.count_value--;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n{{getStatus()}}\\n\\n<p> Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam animi neque sapiente debitis molestias delectus atque quidem incidunt eaque, officiis tempore. Optio aliquam rerum corrupti. Dolorem suscipit consectetur itaque atque!\\n</p>\\n\\n    <router-outlet>\\n\\n</router-outlet>\\n{{clicked}}\\n<br>\\n<button class=\\\"btn btn-danger\\\" [disabled]=\\\"!status\\\" (click) = \\\"onButtonClick()\\\">Click me</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // status:string = \"offline\"\n  status = false;\n  clicked = false;\n  x= 1;\n\n  getStatus(){\n    return this.status;\n  }\n\n  onButtonClick(){\n    if(this.x == 1){\n      this.clicked = true;\n      this.x=0;\n    }\n    else if(this.x == 0){\n      this.clicked = false;\n      this.x=1;\n    }\n  }\n\n  constructor() {\n    setTimeout( ()=>{\n      this.status=true;\n    },5000)\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet>\\r\\n\\r\\n</router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Blue with white text -->\\n<nav class=\\\"navbar navbar-expand-sm bg-primary navbar-dark\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/contact\\\">Contact us</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/counter\\\">Counter</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/ict\\\">ICT</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/userslistdata\\\">User List</a>\\n        </li>\\n      </ul>\\n</nav>     \\n \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  data = \"Navbar Head\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"status else name\\\">\\n  {{mssg}}\\n</p>\\n\\n<ng-template #name>\\n  <p>data here.......</p>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-temp',\n  templateUrl: './temp.component.html',\n  styleUrls: ['./temp.component.css']\n})\nexport class TempComponent implements OnInit {\n\n  mssg=\"Welcome to ict\";\n  status=false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let item of userdatas\\\">\\n    <div class=\\\"col-md-4\\\" style=\\\"margin-bottom: 40px\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{item.id}}. {{item.name}}</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{item.phone}}</h6>\\n          <p class=\\\"card-text\\\">{{item.website}}</p>\\n          <!-- <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\n          <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiserviceService } from '../apiservice.service';\n\n@Component({\n  selector: 'app-userslist',\n  templateUrl: './userslist.component.html',\n  styleUrls: ['./userslist.component.css']\n})\nexport class UserslistComponent implements OnInit {\n\n  userdatas = [] ;\n  constructor(private apiService:ApiserviceService) {\n\n    this.onGetdata();\n   }\n\n  ngOnInit() {\n  }\n\n  onGetdata(){\n    this.apiService.getServerData().subscribe(\n      (newData:any[])=>{\n        console.log(newData);\n        this.userdatas = newData;\n      },\n      (error)=>{\n        console.log(error);\n      }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}